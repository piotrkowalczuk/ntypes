version: 2
jobs:
  lint:
    docker:
      - image: circleci/golang
    working_directory: /go/src/github.com/piotrkowalczuk/ntypes
    steps:
      - checkout
      - run:
          name: Install protoc
          command: bash ./.circleci/scripts/install_protoc.sh
      - run:
          name: Install command line tools
          command: |
            go get -u github.com/ckaznocha/protoc-gen-lint
      - run:
          name: Lint protobuf
          command: bash ./.circleci/scripts/generate.sh lint
      - run:
          name: Generate protobuf
          command: bash ./.circleci/scripts/generate.sh python
  golang:
    docker:
      - image: circleci/golang
    working_directory: /go/src/github.com/piotrkowalczuk/ntypes
    steps:
      - checkout
      - run:
          name: Install golang packages
          command: |
            go get -u github.com/golang/protobuf/proto
            go get -u github.com/golang/protobuf/protoc-gen-go
            go get -u google.golang.org/grpc
      - run:
          name: Install protoc
          command: bash ./.circleci/scripts/install_protoc.sh
      - run:
          name: Generate protobuf
          command: bash ./.circleci/scripts/generate.sh golang
  python:
    docker:
      - image: circleci/python:3
    working_directory: ~/ntypes
    steps:
      - checkout
      - run:
          name: Install python packages
          command: |
            python -m venv ./venv
            . venv/bin/activate
            pip install grpcio grpcio-tools
      - run:
          name: Install protoc
          command: bash ./.circleci/scripts/install_protoc.sh
      - run:
          name: Generate protobuf
          command: |
            . venv/bin/activate
            bash ./.circleci/scripts/generate.sh python
      - run: make version
  java:
    docker:
      - image: circleci/openjdk:8
    working_directory: ~/ntypes
    steps:
      - checkout
      - run:
          name: Install protoc
          command: bash ./.circleci/scripts/install_protoc.sh
      - run:
          name: Generate protobuf
          command: bash ./.circleci/scripts/generate.sh java
  deploy:
    machine: true
    steps:
      - run:
          name: Finish
          command: echo "OK"
workflows:
  version: 2
  generate:
    jobs:
      - golang
      - python
      - java
      - deploy:
          requires:
            - golang
            - python
            - java